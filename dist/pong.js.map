{"version":3,"file":"pong.js","sources":["../js/ball.js","../js/collisionDetector.js","../js/keyListener.js","../js/paddle.js","../js/touchListener.js","../js/display.js","../js/game.js","../js/pong.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////\n// BALL\n//\n\nfunction Ball() {\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n    this.ax = 1;\n    this.ay = 1;\n    this.width = 14;\n    this.height = 14;\n    this.halfHeight = this.height / 2;\n    this.halfWidth = this.width / 2;\n    this.radius = 6;\n    this.restitution = 2;\n}\n\nBall.prototype.update = function () {\n    this.x += this.vx;\n    this.y += this.vy;\n};\n\nBall.prototype.draw = function (p) {\n    const centerX = this.x + this.width / 2;\n    const centerY = this.y + this.height / 2;\n    const radius = this.width / 2;\n\n    p.beginPath();\n    p.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n    p.closePath();\n    p.fill();\n};\n\nBall.prototype.getMidX = function() {\n  return this.halfWidth + this.x;\n};\n\nBall.prototype.getMidY = function() {\n  return this.halfHeight + this.y;\n};\n\nBall.prototype.getTop = function() {\n  return this.y;\n};\n\nBall.prototype.getBottom = function() {\n  return this.y + this.height;\n};\n\nBall.prototype.getLeft = function() {\n  return this.x;\n};\n\nBall.prototype.getRight = function() {\n  return this.x + this.width;\n};\n\nexport default Ball;\n","///////////////////////////////////////////////////////////////////////////////\n// COLLISION DETECTOR\n//\nconst STICKY_THRESHOLD = 0.004;\n\nfunction CollisionDetector() {\n\n}\n\n// Rect collision tests the edges of each rect to\n// test whether the objects are overlapping the other\nCollisionDetector.prototype.collideRect = function(collider, collidee) {\n    // Store the collider and collidee edges\n    const l1 = collider.getLeft();\n    const t1 = collider.getTop();\n    const r1 = collider.getRight();\n    const b1 = collider.getBottom();\n\n    const l2 = collidee.getLeft();\n    const t2 = collidee.getTop();\n    const r2 = collidee.getRight();\n    const b2 = collidee.getBottom();\n\n    //console.log('l1:',l1,'t1:',t1,'r1:',r1,'b1:',\n    //             b1,'l2:',l2,'t2:',t2,'r2:',r2,'b2:',b2);\n\n    // If the any of the edges are beyond any of the\n    // others, then we know that the box cannot be\n    // colliding\n    if (b1 < t2 || t1 > b2 || r1 < l2 || l1 > r2) {\n        return false;\n    }\n\n    // If the algorithm made it here, it had to collide\n    return true;\n};\n\nCollisionDetector.prototype.resolveElastic = function(player, entity) {\n  // Find the mid points of the entity and player\n  const pMidX = player.getMidX();\n  const pMidY = player.getMidY();\n  const aMidX = entity.getMidX();\n  const aMidY = entity.getMidY();\n\n  // To find the side of entry calculate based on\n  // the normalized sides\n  const dx = (aMidX - pMidX) / entity.halfWidth;\n  const dy = (aMidY - pMidY) / entity.halfHeight;\n\n  // Calculate the absolute change in x and y\n  const absDX = Math.abs(dx);\n  const absDY = Math.abs(dy);\n\n  // If the distance between the normalized x and y\n  // position is less than a small threshold (.1 in this case)\n  // then this object is approaching from a corner\n  if (Math.abs(absDX - absDY) < 0.25) {\n\n      // If the player is approaching from positive X\n      if (dx < 0) {\n\n          // Set the player x to the right side\n          player.x = entity.getRight();\n\n      // If the player is approaching from negative X\n      } else {\n\n          // Set the player x to the left side\n          player.x = entity.getLeft() - player.width;\n      }\n\n      // If the player is approaching from positive Y\n      if (dy < 0) {\n\n          // Set the player y to the bottom\n          player.y = entity.getBottom();\n\n      // If the player is approaching from negative Y\n      } else {\n\n          // Set the player y to the top\n          player.y = entity.getTop() - player.height;\n      }\n\n      // Randomly select a x/y direction to reflect velocity on\n      if (Math.random() < 0.5) {\n\n          // Reflect the velocity at a reduced rate\n          player.vx = -player.vx * entity.restitution;\n\n          // If the object's velocity is nearing 0, set it to 0\n          // STICKY_THRESHOLD is set to .0004\n          if (Math.abs(player.vx) < STICKY_THRESHOLD) {\n              player.vx = 0;\n          }\n\n      } else {\n\n          player.vy = -player.vy * entity.restitution;\n\n          if (Math.abs(player.vy) < STICKY_THRESHOLD) {\n              player.vy = 0;\n          }\n      }\n\n  // If the object is approaching from the sides\n  } else if (absDX > absDY) {\n\n      // If the player is approaching from positive X\n      if (dx < 0) {\n          player.x = entity.getRight();\n      } else {\n      // If the player is approaching from negative X\n          player.x = entity.getLeft() - player.width;\n      }\n\n      // Velocity component\n      player.vx = -player.vx * entity.restitution;\n\n      if (Math.abs(player.vx) < STICKY_THRESHOLD) {\n          player.vx = 0;\n      }\n\n  // If this collision is coming from the top or bottom more\n  } else {\n\n      // If the player is approaching from positive Y\n      if (dy < 0) {\n\n          player.y = entity.getBottom();\n\n      } else {\n          // If the player is approaching from negative Y\n          player.y = entity.getTop() - player.height;\n      }\n\n      // Velocity component\n      player.vy = -player.vy * entity.restitution;\n\n      if (Math.abs(player.vy) < STICKY_THRESHOLD) {\n          player.vy = 0;\n      }\n  }\n};\n\nexport default CollisionDetector;\n","//////////////////////////////////////////////////////////////////////////////\n// KEY LISTENER\n//\n\nfunction KeyListener() {\n  this.pressedKeys = [];\n\n  this.keydown = function(e) {\n      this.pressedKeys[e.keyCode] = true;\n  };\n\n  this.keyup = function(e) {\n      this.pressedKeys[e.keyCode] = false;\n  };\n\n  document.addEventListener(\"keydown\", this.keydown.bind(this));\n  document.addEventListener(\"keyup\", this.keyup.bind(this));\n}\n\nKeyListener.prototype.isPressed = function(key) {\n  return this.pressedKeys[key] ? true : false;\n};\n\nKeyListener.prototype.addKeyPressListener = function(keyCode, callback) {\n  document.addEventListener(\"keypress\", function(e) {\n      if (e.charCode === keyCode) {\n          callback(e);\n      }\n  });\n};\n\nexport default KeyListener;\n","///////////////////////////////////////////////////////////////////////////////\n// PADDLE\n//\n\nfunction Paddle(x,y) {\n    this.x = x;\n    this.y = y;\n    this.width = 10;\n    this.height = 80;\n    this.score = 0;\n    this.halfWidth = this.width / 2;\n    this.halfHeight = this.height / 2;\n    this.restitution = 1.1;\n}\n\nPaddle.prototype.draw = function(p) {\n  p.fillRect(this.x, this.y, this.width, this.height);\n};\n\nPaddle.prototype.getMidX = function() {\n  return this.halfWidth + this.x;\n};\n\nPaddle.prototype.getMidY = function() {\n  return this.halfHeight + this.y;\n};\n\nPaddle.prototype.getTop = function() {\n  return this.y;\n};\n\nPaddle.prototype.getBottom = function() {\n  return this.y + this.height;\n};\n\nPaddle.prototype.getLeft = function() {\n  return this.x;\n};\n\nPaddle.prototype.getRight = function() {\n  return this.x + this.width;\n};\n\nexport default Paddle;\n","///////////////////////////////////////////////////////////////////////////////\n// TOUCH LISTENER\n//\n\nfunction TouchListener(element) {\n  this.touches = [];\n  this.touchMoveListener = function(touch) {};\n  this.doubleTapListener = function() {};\n  this.timeout = 0;\n  this.lastTap = 0;\n\n  element.addEventListener(\"touchstart\", (function(e) {\n    e.preventDefault();\n    for (var i = 0; i < e.changedTouches.length; i++) {\n      var touch = e.changedTouches[i];\n      this.touches[touch.identifier] = {x: touch.clientX, y: touch.clientY};\n    }\n  }).bind(this));\n\n  element.addEventListener(\"touchmove\", (function(e) {\n    e.preventDefault();\n    for (var i = 0; i < e.changedTouches.length; i++) {\n      var touch = e.changedTouches[i];\n      var previousTouch = this.touches[touch.identifier];\n      this.touches[touch.identifier] = {x: touch.clientX, y: touch.clientY};\n\n      var offset = {x: touch.clientX - previousTouch.x,\n                    y: touch.clientY - previousTouch.y};\n      this.touchMoveListener({x: touch.clientX,\n                              y: touch.clientY, offset: offset});\n    }\n  }).bind(this));\n\n  element.addEventListener(\"touchend\", (function(e) {\n\n    for (let i = 0; i < e.changedTouches.length; i++) {\n      delete this.touches[e.changedTouches[i].identifier];\n    }\n\n    let currentTime   = new Date().getTime();\n    let tapLength     = currentTime - this.lastTap;\n\n    clearTimeout(this.timeout);\n\n    if (tapLength < 500 && tapLength > 0) {\n        // this was a double tap\n        this.doubleTapListener();\n        event.preventDefault();\n    } else {\n        this.timeout = setTimeout(function() {\n            clearTimeout(this.timeout);\n        }, 500);\n    }\n\n    this.lastTap = currentTime;\n\n  }).bind(this));\n}\n\nexport default TouchListener;\n","///////////////////////////////////////////////////////////////////////////////\n// DISPLAY\n//\nfunction Display(x, y) {\n    this.x = x;\n    this.y = y;\n    this.value = 0;\n}\n\nDisplay.prototype.draw = function(p) {\n    p.fillText(this.value, this.x, this.y);\n    p.font=\"30px Verdana\";\n};\n\nDisplay.prototype.drawPaused = function(p) {\n  p.fillText(\"PAUSED\", this.x, this.y);\n  p.font=\"60px Verdana\";\n};\n\nexport default Display;\n","///////////////////////////////////////////////////////////////////////////////\n// GAME\n//\n\n// IMPORTS\nimport Ball from './ball.js';\nimport CollisionDetector from './collisionDetector.js';\nimport KeyListener from './keyListener.js';\nimport Paddle from './paddle.js';\nimport TouchListener from './touchListener.js';\nimport Display from './display.js';\n\n// CONSTANTS\nconst PAUSE_KEY = 112;\nconst INITIAL_SPEED = 2;\nconst INITIAL_SPEED_OFFSET = 4;\n\n\nfunction Game() {\n  const canvas              = document.getElementById(\"game\");\n  this.width                = canvas.width;\n  this.height               = canvas.height;\n  this.context              = canvas.getContext(\"2d\");\n  this.context.fillStyle    = \"white\";\n  this.keys                 = new KeyListener();\n  this.touches              = new TouchListener(canvas);\n  this.collisions           = new CollisionDetector();\n\n  this.keys.addKeyPressListener(PAUSE_KEY, (e) => {\n    this.showMenu();\n    if(this.paused) {\n      this.paused = false;\n    } else {\n      this.paused = true;\n    }\n  });\n\n  this.paused = true;\n\n  this.p1 = new Paddle(5, 0);\n  this.p1.y = this.height/2 - this.p1.height/2;\n  this.display1 = new Display(this.width/4, 35);\n\n  this.p2 = new Paddle(this.width - 5 - 10, 0);\n  this.p2.y = this.height/2 - this.p2.height/2;\n  this.display2 = new Display(this.width*3/4, 35);\n\n  this.displayPaused = new Display(this.width/2 - 20, this.height/2 - 10);\n\n  this.touches.doubleTapListener = () => {\n    if(!this.paused) {\n      this.showMenu();\n      this.paused = true;\n    }\n  };\n\n  this.touches.touchMoveListener = (touch) => {\n    if(touch.x < this.width / 2) {\n      if(touch.offset.y < 0) {\n        this.p1.y = Math.max(0, this.p1.y + touch.offset.y);\n      } else {\n        this.p1.y = Math.min(this.height - this.p1.height, this.p1.y + touch.offset.y);\n      }\n    } else if(touch.x > this.width / 2) {\n      if(touch.offset.y < 0) {\n        this.p2.y = Math.max(0, this.p2.y + touch.offset.y);\n      } else {\n        this.p2.y = Math.min(this.height - this.p2.height, this.p2.y + touch.offset.y);\n      }\n    }\n  };\n\n  this.ball = new Ball();\n  this.ball.x = this.width/2;\n  this.ball.y = this.height/2;\n  this.ball.vy = Math.floor(Math.random()*INITIAL_SPEED - INITIAL_SPEED_OFFSET);\n  this.ball.vx = INITIAL_SPEED - Math.abs(this.ball.vy);\n}\n\nGame.prototype.resetGame = function() {\n\n  this.p1.score = 0;\n  this.p2.score = 0;\n\n  this.p1.y = this.height/2 - this.p1.height/2;\n  this.p2.y = this.height/2 - this.p2.height/2;\n\n  this.ball.x = this.width/2;\n  this.ball.y = this.height/2;\n  this.ball.vy = Math.floor(Math.random()*INITIAL_SPEED - INITIAL_SPEED_OFFSET);\n  this.ball.vx = INITIAL_SPEED - Math.abs(this.ball.vy);\n\n};\n\nGame.prototype.showMenu = function() {\n  const menu = document.getElementById('menu');\n\n  if(this.paused) {\n    menu.style.visibility = \"hidden\";\n  } else {\n    menu.style.visibility = \"visible\";\n  }\n\n};\n\nGame.prototype.draw = function() {\n  this.context.clearRect(0, 0, this.width, this.height);\n  this.context.fillRect(this.width/2, 0, 2, this.height);\n\n  this.ball.draw(this.context);\n\n  this.p1.draw(this.context);\n  this.p2.draw(this.context);\n\n  this.display1.draw(this.context);\n  this.display2.draw(this.context);\n};\n\nGame.prototype.inputs = function() {\n\n  if (this.paused) {\n      return;\n  }\n\n  this.display1.value = this.p1.score;\n  this.display2.value = this.p2.score;\n\n  // To which Y direction the paddle is moving\n  if (this.keys.isPressed(83)) { // DOWN\n      this.p1.y = Math.min(this.height - this.p1.height, this.p1.y + 4);\n  } else if (this.keys.isPressed(87)) { // UP\n      this.p1.y = Math.max(0, this.p1.y - 4);\n  }\n\n  if (this.keys.isPressed(40)) { // DOWN\n      this.p2.y = Math.min(this.height - this.p2.height, this.p2.y + 4);\n  } else if (this.keys.isPressed(38)) { // UP\n      this.p2.y = Math.max(0, this.p2.y - 4);\n  }\n};\n\nGame.prototype.update = function() {\n  if (this.paused) {\n      return;\n  }\n\n  this.ball.update();\n\n  if(this.collisions.collideRect(this.ball, this.p2)) {\n    this.collisions.resolveElastic(this.ball, this.p2);\n  }\n\n  if(this.collisions.collideRect(this.ball, this.p1)) {\n    this.collisions.resolveElastic(this.ball, this.p1);\n  }\n\n\n/*\n  if (this.ball.vx > 0) {\n      if (this.p2.x <= this.ball.x + this.ball.width &&\n              this.p2.x > this.ball.x - this.ball.vx + this.ball.width) {\n          var collisionDiff = this.ball.x + this.ball.width - this.p2.x;\n          var k = collisionDiff/this.ball.vx;\n          var y = this.ball.vy*k + (this.ball.y - this.ball.vy);\n          if (y >= this.p2.y && y + this.ball.height <= this.p2.y + this.p2.height) {\n              // collides with right paddle\n              this.ball.x = this.p2.x - this.ball.width;\n              this.ball.y = Math.floor(this.ball.y - this.ball.vy + this.ball.vy*k);\n              this.ball.vx = -this.ball.vx;\n          }\n      }\n  } else {\n      if (this.p1.x + this.p1.width >= this.ball.x) {\n          var collisionDiff = this.p1.x + this.p1.width - this.ball.x;\n          var k = collisionDiff/-this.ball.vx;\n          var y = this.ball.vy*k + (this.ball.y - this.ball.vy);\n          if (y >= this.p1.y && y + this.ball.height <= this.p1.y + this.p1.height) {\n              // collides with the left paddle\n              this.ball.x = this.p1.x + this.p1.width;\n              this.ball.y = Math.floor(this.ball.y - this.ball.vy + this.ball.vy*k);\n              this.ball.vx = -this.ball.vx;\n          }\n      }\n  }*/\n\n  // Top and bottom collision\n  if ((this.ball.vy < 0 && this.ball.y < 0) ||\n          (this.ball.vy > 0 && this.ball.y + this.ball.height > this.height)) {\n      this.ball.vy = -this.ball.vy;\n  }\n\n  // Scoring\n  if (this.ball.x >= this.width)\n      this.score(this.p1);\n  else if (this.ball.x + this.ball.width <= 0)\n      this.score(this.p2);\n};\n\nGame.prototype.score = function(p) {\n  // player scores\n  p.score++;\n\n  const player = p == this.p1 ? 0 : 1;\n\n  // set ball position\n  this.ball.x = this.width/2;\n  this.ball.y = p.y + p.height/2;\n\n  // set ball velocity\n  this.ball.vy = Math.floor(Math.random()*INITIAL_SPEED - INITIAL_SPEED_OFFSET);\n  this.ball.vx = INITIAL_SPEED - Math.abs(this.ball.vy);\n  if (player == 1)\n      this.ball.vx *= -1;\n};\n\nexport default Game;\n","///////////////////////////////////////////////////////////////////////////////\n// MAIN GAME LOOP\n//\nimport Game from './game.js';\n\n// Initialize the game instance\nconst game  = new Game();\nlet   afID  = null;\n\nfunction step(timestamp) {\n  afID = requestAnimationFrame(step);\n  game.update();\n  game.inputs();\n  game.draw();\n}\n\ndocument.getElementById('resume-game').onclick = function() {\n  game.showMenu();\n  game.paused = false;\n};\n\ndocument.getElementById('new-game').onclick = function() {\n  document.getElementById('resume-game').disabled = false;\n  game.resetGame();\n  game.showMenu();\n  game.paused = false;\n};\n\nafID = window.requestAnimationFrame(step);\n"],"names":["Ball","x","y","vx","vy","ax","ay","width","height","halfHeight","this","halfWidth","radius","restitution","CollisionDetector","KeyListener","pressedKeys","keydown","e","keyCode","keyup","addEventListener","bind","Paddle","score","TouchListener","element","touches","touchMoveListener","touch","doubleTapListener","timeout","lastTap","preventDefault","i","changedTouches","length","identifier","clientX","clientY","previousTouch","offset","currentTime","Date","getTime","tapLength","setTimeout","Display","value","Game","canvas","document","getElementById","context","getContext","fillStyle","keys","collisions","addKeyPressListener","PAUSE_KEY","showMenu","_this","paused","p1","display1","p2","display2","displayPaused","Math","max","min","ball","floor","random","INITIAL_SPEED","INITIAL_SPEED_OFFSET","abs","step","timestamp","requestAnimationFrame","update","inputs","draw","prototype","p","centerX","centerY","beginPath","arc","PI","closePath","fill","getMidX","getMidY","getTop","getBottom","getLeft","getRight","STICKY_THRESHOLD","collideRect","collider","collidee","l1","t1","r1","b1","l2","t2","r2","b2","resolveElastic","player","entity","pMidX","pMidY","aMidX","aMidY","dx","dy","absDX","absDY","isPressed","key","callback","charCode","fillRect","fillText","font","drawPaused","resetGame","menu","style","visibility","clearRect","game","afID","onclick","disabled","window"],"mappings":"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"}