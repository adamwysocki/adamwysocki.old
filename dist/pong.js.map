{"version":3,"file":"pong.js","sources":["../js/ball.js","../js/collisionDetector.js","../js/keyListener.js","../js/paddle.js","../js/touchListener.js","../js/display.js","../js/game.js","../js/pong.js"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////////\n// BALL\n//\n\nfunction Ball() {\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n    this.ax = 1;\n    this.ay = 1;\n    this.width = 14;\n    this.height = 14;\n    this.halfHeight = this.height / 2;\n    this.halfWidth = this.width / 2;\n    this.radius = 6;\n    this.restitution = 2;\n}\n\nBall.prototype.update = function () {\n    this.x += this.vx;\n    this.y += this.vy;\n};\n\nBall.prototype.draw = function (p) {\n    const centerX = this.x + this.width / 2;\n    const centerY = this.y + this.height / 2;\n    const radius = this.width / 2;\n\n    p.beginPath();\n    p.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n    p.closePath();\n    p.fill();\n};\n\nBall.prototype.getMidX = function() {\n  return this.halfWidth + this.x;\n};\n\nBall.prototype.getMidY = function() {\n  return this.halfHeight + this.y;\n};\n\nBall.prototype.getTop = function() {\n  return this.y;\n};\n\nBall.prototype.getBottom = function() {\n  return this.y + this.height;\n};\n\nBall.prototype.getLeft = function() {\n  return this.x;\n};\n\nBall.prototype.getRight = function() {\n  return this.x + this.width;\n};\n\nexport default Ball;\n","///////////////////////////////////////////////////////////////////////////////\n// COLLISION DETECTOR\n//\nconst STICKY_THRESHOLD = 0.004;\n\nfunction CollisionDetector() {\n\n}\n\n// Rect collision tests the edges of each rect to\n// test whether the objects are overlapping the other\nCollisionDetector.prototype.collideRect = function(collider, collidee) {\n    // Store the collider and collidee edges\n    const l1 = collider.getLeft();\n    const t1 = collider.getTop();\n    const r1 = collider.getRight();\n    const b1 = collider.getBottom();\n\n    const l2 = collidee.getLeft();\n    const t2 = collidee.getTop();\n    const r2 = collidee.getRight();\n    const b2 = collidee.getBottom();\n\n    console.log('l1:',l1,'t1:',t1,'r1:',r1,'b1:',\n                 b1,'l2:',l2,'t2:',t2,'r2:',r2,'b2:',b2);\n\n    // If the any of the edges are beyond any of the\n    // others, then we know that the box cannot be\n    // colliding\n    if (b1 < t2 || t1 > b2 || r1 < l2 || l1 > r2) {\n        return false;\n    }\n\n    // If the algorithm made it here, it had to collide\n    return true;\n};\n\nCollisionDetector.prototype.resolveElastic = function(player, entity) {\n  // Find the mid points of the entity and player\n  const pMidX = player.getMidX();\n  const pMidY = player.getMidY();\n  const aMidX = entity.getMidX();\n  const aMidY = entity.getMidY();\n\n  // To find the side of entry calculate based on\n  // the normalized sides\n  const dx = (aMidX - pMidX) / entity.halfWidth;\n  const dy = (aMidY - pMidY) / entity.halfHeight;\n\n  // Calculate the absolute change in x and y\n  const absDX = Math.abs(dx);\n  const absDY = Math.abs(dy);\n\n  // If the distance between the normalized x and y\n  // position is less than a small threshold (.1 in this case)\n  // then this object is approaching from a corner\n  if (Math.abs(absDX - absDY) < 0.25) {\n\n      // If the player is approaching from positive X\n      if (dx < 0) {\n\n          // Set the player x to the right side\n          player.x = entity.getRight();\n\n      // If the player is approaching from negative X\n      } else {\n\n          // Set the player x to the left side\n          player.x = entity.getLeft() - player.width;\n      }\n\n      // If the player is approaching from positive Y\n      if (dy < 0) {\n\n          // Set the player y to the bottom\n          player.y = entity.getBottom();\n\n      // If the player is approaching from negative Y\n      } else {\n\n          // Set the player y to the top\n          player.y = entity.getTop() - player.height;\n      }\n\n      // Randomly select a x/y direction to reflect velocity on\n      if (Math.random() < 0.5) {\n\n          // Reflect the velocity at a reduced rate\n          player.vx = -player.vx * entity.restitution;\n\n          // If the object's velocity is nearing 0, set it to 0\n          // STICKY_THRESHOLD is set to .0004\n          if (Math.abs(player.vx) < STICKY_THRESHOLD) {\n              player.vx = 0;\n          }\n\n      } else {\n\n          player.vy = -player.vy * entity.restitution;\n\n          if (Math.abs(player.vy) < STICKY_THRESHOLD) {\n              player.vy = 0;\n          }\n      }\n\n  // If the object is approaching from the sides\n  } else if (absDX > absDY) {\n\n      // If the player is approaching from positive X\n      if (dx < 0) {\n          player.x = entity.getRight();\n      } else {\n      // If the player is approaching from negative X\n          player.x = entity.getLeft() - player.width;\n      }\n\n      // Velocity component\n      player.vx = -player.vx * entity.restitution;\n\n      if (Math.abs(player.vx) < STICKY_THRESHOLD) {\n          player.vx = 0;\n      }\n\n  // If this collision is coming from the top or bottom more\n  } else {\n\n      // If the player is approaching from positive Y\n      if (dy < 0) {\n\n          player.y = entity.getBottom();\n\n      } else {\n          // If the player is approaching from negative Y\n          player.y = entity.getTop() - player.height;\n      }\n\n      // Velocity component\n      player.vy = -player.vy * entity.restitution;\n\n      if (Math.abs(player.vy) < STICKY_THRESHOLD) {\n          player.vy = 0;\n      }\n  }\n};\n\nexport default CollisionDetector;\n","//////////////////////////////////////////////////////////////////////////////\n// KEY LISTENER\n//\n\nfunction KeyListener() {\n  this.pressedKeys = [];\n\n  this.keydown = function(e) {\n      this.pressedKeys[e.keyCode] = true;\n  };\n\n  this.keyup = function(e) {\n      this.pressedKeys[e.keyCode] = false;\n  };\n\n  document.addEventListener(\"keydown\", this.keydown.bind(this));\n  document.addEventListener(\"keyup\", this.keyup.bind(this));\n}\n\nKeyListener.prototype.isPressed = function(key) {\n  return this.pressedKeys[key] ? true : false;\n};\n\nKeyListener.prototype.addKeyPressListener = function(keyCode, callback) {\n  document.addEventListener(\"keypress\", function(e) {\n      if (e.keyCode == keyCode) {\n          callback(e);\n      }\n  });\n};\n\nexport default KeyListener;\n","///////////////////////////////////////////////////////////////////////////////\n// PADDLE\n//\n\nfunction Paddle(x,y) {\n    this.x = x;\n    this.y = y;\n    this.width = 10;\n    this.height = 80;\n    this.score = 0;\n    this.halfWidth = this.width / 2;\n    this.halfHeight = this.height / 2;\n    this.restitution = 1.1;\n}\n\nPaddle.prototype.draw = function(p) {\n  p.fillRect(this.x, this.y, this.width, this.height);\n};\n\nPaddle.prototype.getMidX = function() {\n  return this.halfWidth + this.x;\n};\n\nPaddle.prototype.getMidY = function() {\n  return this.halfHeight + this.y;\n};\n\nPaddle.prototype.getTop = function() {\n  return this.y;\n};\n\nPaddle.prototype.getBottom = function() {\n  return this.y + this.height;\n};\n\nPaddle.prototype.getLeft = function() {\n  return this.x;\n};\n\nPaddle.prototype.getRight = function() {\n  return this.x + this.width;\n};\n\nexport default Paddle;\n","///////////////////////////////////////////////////////////////////////////////\n// TOUCH LISTENER\n//\n\nfunction TouchListener(element) {\n  this.touches = [];\n  this.touchMoveListener = function(touch) {};\n\n  element.addEventListener(\"touchstart\", (function(e) {\n    e.preventDefault();\n    for (var i = 0; i < e.changedTouches.length; i++) {\n      var touch = e.changedTouches[i];\n      this.touches[touch.identifier] = {x: touch.clientX, y: touch.clientY};\n    }\n  }).bind(this));\n\n  element.addEventListener(\"touchmove\", (function(e) {\n    e.preventDefault();\n    for (var i = 0; i < e.changedTouches.length; i++) {\n      var touch = e.changedTouches[i];\n      var previousTouch = this.touches[touch.identifier];\n      this.touches[touch.identifier] = {x: touch.clientX, y: touch.clientY};\n\n      var offset = {x: touch.clientX - previousTouch.x,\n                    y: touch.clientY - previousTouch.y};\n      this.touchMoveListener({x: touch.clientX,\n                              y: touch.clientY, offset: offset});\n    }\n  }).bind(this));\n\n  element.addEventListener(\"touchend\", (function(e) {\n    e.preventDefault();\n    for (var i = 0; i < e.changedTouches.length; i++) {\n      delete this.touches[e.changedTouches[i].identifier];\n    }\n  }).bind(this));\n}\n\nexport default TouchListener;\n","///////////////////////////////////////////////////////////////////////////////\n// DISPLAY\n//\nfunction Display(x, y) {\n    this.x = x;\n    this.y = y;\n    this.value = 0;\n}\n\nDisplay.prototype.draw = function(p) {\n    p.fillText(this.value, this.x, this.y);\n    p.font=\"30px Verdana\";\n};\n\nexport default Display;\n","///////////////////////////////////////////////////////////////////////////////\n// GAME\n//\n\n// IMPORTS\nimport Ball from './ball.js';\nimport CollisionDetector from './collisionDetector.js';\nimport KeyListener from './keyListener.js';\nimport Paddle from './paddle.js';\nimport TouchListener from './touchListener.js';\nimport Display from './display.js';\n\n// CONSTANTS\nconst PAUSE_KEY = 112;\n\nfunction Game() {\n  const canvas              = document.getElementById(\"game\");\n  this.width                = canvas.width;\n  this.height               = canvas.height;\n  this.context              = canvas.getContext(\"2d\");\n  this.context.fillStyle    = \"white\";\n  this.keys                 = new KeyListener();\n  this.touches              = new TouchListener(canvas);\n  this.collisions           = new CollisionDetector();\n\n  const self = this;\n\n  this.keys.addKeyPressListener(PAUSE_KEY, function(e) {\n    if(self.paused) {\n      self.paused = false;\n    } else {\n      self.paused = true;\n    }\n  });\n\n  this.paused = false;\n\n  this.p1 = new Paddle(5, 0);\n  this.p1.y = this.height/2 - this.p1.height/2;\n  this.display1 = new Display(this.width/4, 35);\n\n  this.p2 = new Paddle(this.width - 5 - 10, 0);\n  this.p2.y = this.height/2 - this.p2.height/2;\n  this.display2 = new Display(this.width*3/4, 35);\n\n  this.touches.touchMoveListener = function(touch) {\n    if(touch.x < self.width / 2) {\n      if(touch.offset.y < 0) {\n        self.p1.y = Math.max(0, self.p1.y + touch.offset.y);\n      } else {\n        self.p1.y = Math.min(self.height - self.p1.height, self.p1.y + touch.offset.y);\n      }\n    } else if(touch.x > self.width / 2) {\n      if(touch.offset.y < 0) {\n        self.p2.y = Math.max(0, self.p2.y + touch.offset.y);\n      } else {\n        self.p2.y = Math.min(self.height - self.p2.height, self.p2.y + touch.offset.y);\n      }\n    }\n  };\n\n  this.ball = new Ball();\n  this.ball.x = this.width/2;\n  this.ball.y = this.height/2;\n  this.ball.vy = Math.floor(Math.random()*8 - 6);\n  this.ball.vx = 7 - Math.abs(this.ball.vy);\n}\n\nGame.prototype.draw = function() {\n  this.context.clearRect(0, 0, this.width, this.height);\n  this.context.fillRect(this.width/2, 0, 2, this.height);\n\n  this.ball.draw(this.context);\n\n  this.p1.draw(this.context);\n  this.p2.draw(this.context);\n\n  this.display1.draw(this.context);\n  this.display2.draw(this.context);\n};\n\nGame.prototype.inputs = function() {\n\n  if (this.paused) {\n      return;\n  }\n\n  this.display1.value = this.p1.score;\n  this.display2.value = this.p2.score;\n\n  // To which Y direction the paddle is moving\n  if (this.keys.isPressed(83)) { // DOWN\n      this.p1.y = Math.min(this.height - this.p1.height, this.p1.y + 4);\n  } else if (this.keys.isPressed(87)) { // UP\n      this.p1.y = Math.max(0, this.p1.y - 4);\n  }\n\n  if (this.keys.isPressed(40)) { // DOWN\n      this.p2.y = Math.min(this.height - this.p2.height, this.p2.y + 4);\n  } else if (this.keys.isPressed(38)) { // UP\n      this.p2.y = Math.max(0, this.p2.y - 4);\n  }\n};\n\nGame.prototype.update = function() {\n  if (this.paused) {\n      return;\n  }\n\n  this.ball.update();\n\n  if(this.collisions.collideRect(this.ball, this.p2)) {\n    this.collisions.resolveElastic(this.ball, this.p2);\n  }\n\n  if(this.collisions.collideRect(this.ball, this.p1)) {\n    this.collisions.resolveElastic(this.ball, this.p1);\n  }\n\n\n/*\n  if (this.ball.vx > 0) {\n      if (this.p2.x <= this.ball.x + this.ball.width &&\n              this.p2.x > this.ball.x - this.ball.vx + this.ball.width) {\n          var collisionDiff = this.ball.x + this.ball.width - this.p2.x;\n          var k = collisionDiff/this.ball.vx;\n          var y = this.ball.vy*k + (this.ball.y - this.ball.vy);\n          if (y >= this.p2.y && y + this.ball.height <= this.p2.y + this.p2.height) {\n              // collides with right paddle\n              this.ball.x = this.p2.x - this.ball.width;\n              this.ball.y = Math.floor(this.ball.y - this.ball.vy + this.ball.vy*k);\n              this.ball.vx = -this.ball.vx;\n          }\n      }\n  } else {\n      if (this.p1.x + this.p1.width >= this.ball.x) {\n          var collisionDiff = this.p1.x + this.p1.width - this.ball.x;\n          var k = collisionDiff/-this.ball.vx;\n          var y = this.ball.vy*k + (this.ball.y - this.ball.vy);\n          if (y >= this.p1.y && y + this.ball.height <= this.p1.y + this.p1.height) {\n              // collides with the left paddle\n              this.ball.x = this.p1.x + this.p1.width;\n              this.ball.y = Math.floor(this.ball.y - this.ball.vy + this.ball.vy*k);\n              this.ball.vx = -this.ball.vx;\n          }\n      }\n  }*/\n\n  // Top and bottom collision\n  if ((this.ball.vy < 0 && this.ball.y < 0) ||\n          (this.ball.vy > 0 && this.ball.y + this.ball.height > this.height)) {\n      this.ball.vy = -this.ball.vy;\n  }\n\n  // Scoring\n  if (this.ball.x >= this.width)\n      this.score(this.p1);\n  else if (this.ball.x + this.ball.width <= 0)\n      this.score(this.p2);\n};\n\nGame.prototype.score = function(p) {\n  // player scores\n  p.score++;\n\n  const player = p == this.p1 ? 0 : 1;\n\n  // set ball position\n  this.ball.x = this.width/2;\n  this.ball.y = p.y + p.height/2;\n\n  // set ball velocity\n  this.ball.vy = Math.floor(Math.random()*8 - 6);\n  this.ball.vx = 7 - Math.abs(this.ball.vy);\n  if (player == 1)\n      this.ball.vx *= -1;\n};\n\nexport default Game;\n","///////////////////////////////////////////////////////////////////////////////\n// MAIN GAME LOOP\n//\nimport Game from './game.js';\n\n// Initialize the game instance\nconst game = new Game();\n\nlet afID = null;\n\nfunction step(timestamp) {\n    afID = requestAnimationFrame(step);\n    game.update();\n    game.inputs();\n    game.draw();\n}\n\nafID = window.requestAnimationFrame(step);\n"],"names":["Ball","x","y","vx","vy","ax","ay","width","height","halfHeight","this","halfWidth","radius","restitution","CollisionDetector","KeyListener","pressedKeys","keydown","e","keyCode","keyup","addEventListener","bind","Paddle","score","TouchListener","element","touches","touchMoveListener","touch","preventDefault","i","changedTouches","length","identifier","clientX","clientY","previousTouch","offset","Display","value","Game","canvas","document","getElementById","context","getContext","fillStyle","keys","collisions","self","addKeyPressListener","PAUSE_KEY","paused","p1","display1","p2","display2","Math","max","min","ball","floor","random","abs","step","timestamp","requestAnimationFrame","update","inputs","draw","prototype","p","centerX","centerY","beginPath","arc","PI","closePath","fill","getMidX","getMidY","getTop","getBottom","getLeft","getRight","STICKY_THRESHOLD","collideRect","collider","collidee","l1","t1","r1","b1","l2","t2","r2","b2","log","resolveElastic","player","entity","pMidX","pMidY","aMidX","aMidY","dx","dy","absDX","absDY","isPressed","key","callback","fillRect","fillText","font","clearRect","game","afID","window"],"mappings":"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"}